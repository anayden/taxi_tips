kind: live
title: Taxi Tips

defaults:
  life_span: 3d

images:
  myimage:
    ref: image:$[[ flow.project_id ]]:v1
    dockerfile: $[[ flow.workspace ]]/Dockerfile
    context: $[[ flow.workspace ]]/
    build_preset: cpu-large
  locust:
    ref: image:$[[ flow.project_id ]]-locust:v1
    dockerfile: $[[ flow.workspace ]]/config/locust.dockerfile
    context: $[[ flow.workspace ]]/config/
    build_preset: cpu-large

volumes:
  config:
    remote: storage:$[[ flow.project_id ]]/config
    mount: /project/config
    local: config
  data:
    remote: storage:$[[ flow.project_id ]]/data
    mount: /project/data
    local: data
  code:
    remote: storage:$[[ flow.project_id ]]/modules
    mount: /project/modules
    local: modules
  notebooks:
    remote: storage:$[[ flow.project_id ]]/notebooks
    mount: /project/notebooks
    local: notebooks
  results:
    remote: storage:$[[ flow.project_id ]]/results
    mount: /project/results
    local: results
  project:
    remote: storage:$[[ flow.project_id ]]
    mount: /project
    local: .

jobs:
  download_data:
    name: download_data
    image: neuromation/neuro-extras:latest
    detach: False
    volumes:
      - $[[ volumes.data.ref ]]
    preset: cpu-small
    bash: |
      cd $[[ volumes.data.mount ]]
      for month in $(seq -w 1 12)
      do
        curl https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2020-${month}.csv -o data-${month}.csv
      done

  inference:
    image: $[[ images.myimage.ref ]]
    life_span: 10d
    http_port: 8000
    http_auth: False
    preset: cpu-small
    multi: true
    detach: true
    volumes:
      - $[[ upload(volumes.code).ref_ro ]]
      - $[[ volumes.results.ref_ro ]]
    params:
      model_tag: final
    env:
      EXPOSE_SSH: "yes"
      PYTHONPATH: $[[ volumes.code.mount ]]
      MODEL_TAG: ${{ params.model_tag  }}
    bash: |
        cd $[[ volumes.project.mount ]]
        uvicorn modules.inference:app --host 0.0.0.0

  train:
    image: $[[ images.myimage.ref ]]
    preset: gpu-small
    volumes:
      - $[[ upload(volumes.code).ref_ro ]]
      - $[[ upload(volumes.data).ref_ro ]]
      - $[[ volumes.results.ref_rw ]]
    env:
      EXPOSE_SSH: "yes"
      PYTHONPATH: $[[ volumes.code.mount ]]
    detach: True
    bash: |
        python modules/train.py

  jupyter:
    action: gh:neuro-actions/jupyter@v1.0.0
    args:
      image: $[[ images.myimage.ref ]]
      preset: cpu-large
      volumes_data_remote: $[[ volumes.data.remote ]]
      volumes_code_remote: $[[ volumes.code.remote ]]
      volumes_config_remote: $[[ volumes.config.remote ]]
      volumes_notebooks_remote: $[[ volumes.notebooks.remote ]]
      volumes_results_remote: $[[ volumes.results.remote ]]

  filebrowser:
    action: gh:neuro-actions/filebrowser@v1.0.0
    args:
      volumes_project_remote: $[[ volumes.project.remote ]]

  locust:
    image: $[[ images.locust.ref ]]
    preset: cpu-small
    multi: true
    http_port: 8080
    http_auth: False
    life_span: 1d
    detach: True
    browse: True
    params:
      endpoint_url: https://taxi-tips-lb--alexeynaiden.jobs.default.org.neu.ro/predict
    volumes:
      - $[[ volumes.results.ref_ro ]]
      - $[[ upload(volumes.code).ref_ro ]]
    env:
      PYTHONPATH: $[[ volumes.code.mount ]]/..
    cmd: |
      -f $[[ volumes.code.mount ]]/locust.py --web-port 8080 -H $[[ params.endpoint_url ]]

  lb:
    image: haproxytech/haproxy-ubuntu:2.4
    volumes:
      - $[[ upload(volumes.config).ref ]]
    preset: cpu-small
    detach: False
    http_port: 8000
    http_auth: False
    bash: |
      haproxy -f $[[ volumes.config.mount ]]/haproxy.cfg